version: '3.8'

services:
  # Laravel Application Service
  app:
    build:
      context: .
      dockerfile: .cursor/Dockerfile
      target: development-tools  # Use development-tools stage for full dev environment
    container_name: lumis_app
    restart: unless-stopped
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-lumis_erp}
      - DB_USERNAME=${DB_USERNAME:-lumis}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - MAIL_MAILER=${MAIL_MAILER:-log}
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - .:/var/www/html
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - lumis_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: lumis_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-lumis_erp}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-lumis}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - lumis_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-root}"]
      retries: 3
      timeout: 5s
      interval: 10s
      start_period: 30s

  # Redis Service for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lumis_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - lumis_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: lumis_phpmyadmin
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-lumis}
      PMA_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
    networks:
      - lumis_network
    depends_on:
      mysql:
        condition: service_healthy

  # MailHog for email testing (development only)
  mailhog:
    image: mailhog/mailhog
    container_name: lumis_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_PORT:-8025}:8025"  # Web interface
      - "${MAILHOG_SMTP_PORT:-1025}:1025"  # SMTP server
    networks:
      - lumis_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  lumis_network:
    driver: bridge 